version: "3"

services:
  company:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/app_db
    volumes:
      - ./apps:/app/apps
      - ./package.json:/app/package.json
      - ./bun.lockb:/app/bun.lockb
    restart: unless-stopped
    depends_on:
      - db
    command: ["bun", "run", "dev:company"]
  payment:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/app_db
    volumes:
      - ./apps:/app/apps
      - ./package.json:/app/package.json
      - ./bun.lockb:/app/bun.lockb
    restart: unless-stopped
    depends_on:
      - db
    command: ["bun", "run", "dev:payment"]

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
